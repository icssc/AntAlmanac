name: 'Stage Pull Request'

on:
  pull_request:
    types: [ opened, synchronize, unlabeled ]

permissions:
  id-token: write
  contents: read
  deployments: write
  pull-requests: write

concurrency:
  group: ${{ github.head_ref }}
  cancel-in-progress: true

jobs:
  deploy:
    if: (!contains(github.event.pull_request.labels.*.name, 'no deploy'))
    runs-on: ubuntu-latest
    env:
      FRONTEND_STACK_NAME: antalmanac-frontend-staging-${{ github.event.pull_request.number }}
      BACKEND_STACK_NAME: antalmanac-backend-staging-${{ github.event.pull_request.number }}
      # env variables for Node.js
      HOSTED_ZONE_ID: ${{ secrets.HOSTED_ZONE_ID }}
      CERTIFICATE_ARN: ${{ secrets.CERTIFICATE_ARN }}
      MONGODB_URI_PROD: ${{ secrets.MONGODB_URI_PROD }}
      PR_NUM: ${{ github.event.pull_request.number }}
      VITE_ENDPOINT: staging-${{ github.event.pull_request.number }} # because vite only reads env variables that start with VITE_
      NODE_ENV: development
      HUSKY: 0
      # env variables for Turbo
      TURBO_API: ${{ vars.TURBO_API }}
      TURBO_TOKEN: ${{ secrets.TURBO_TOKEN }}
      TURBO_TEAM: "team_antalmanac"

    steps:
      - name: checkout antalmanac
        uses: actions/checkout@v3

      - name: setup and build
        uses: ./.github/actions/setup_and_build

      - name: configure AWS credentials
        id: configure-aws-credentials
        uses: aws-actions/configure-aws-credentials@master
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      - name: wait for frontend stack stabilize (if it is currently being deployed)
        uses: ./.github/actions/stabilize_stack
        with:
          stack_name: ${{ env.FRONTEND_STACK_NAME }}

      - name: wait for backend stack stabilize (if it is currently being deployed)
        uses: ./.github/actions/stabilize_stack
        with:
          stack_name: ${{ env.BACKEND_STACK_NAME }}

      - name: check if backend/cdk changed
        uses: dorny/paths-filter@v2
        id: change
        with:
          filters: |
            backend:
              - 'apps/cdk/**'
              - 'apps/backend/**'

      - name: comment staging url
        uses: marocchino/sticky-pull-request-comment@v2
        with:
          header: staging url
          recreate: true
          message: Deployed staging instance to https://staging-${{ github.event.pull_request.number }}.antalmanac.com
