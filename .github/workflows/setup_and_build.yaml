name: Checkout and build AntAlmanac

on:
  workflow_call:
    outputs:
      backendStack:
        value: ${{ jobs.setup_and_build.outputs.backendStack }}
      frontendStack:
        value: ${{ jobs.setup_and_build.outputs.frontendStack }}
      apiSubDomain:
        value: ${{ jobs.setup_and_build.outputs.apiSubDomain }}

jobs:
  setup_and_build:
    runs-on: ubuntu-latest
    outputs:
        backendStack: ${{ steps.write-output.outputs.backendStack }}
        frontendStack: ${{ steps.write-output.outputs.frontendStack }}
        apiSubDomain: ${{ steps.write-output.outputs.apiSubDomain }}

    steps:
      - name: checkout antalmanac
        uses: actions/checkout@v3

      - name: install pnpm
        uses: pnpm/action-setup@v2

      - name: setup node with pnpm cache
        uses: actions/setup-node@v3
        with:
          node-version: '16'
          cache: 'pnpm'

      - name: install packages
        run: pnpm install --frozen-lockfile

      - name: check if backend/cdk changed
        uses: dorny/paths-filter@v2
        id: backend-changed
        with:
          filters: |
            backend:
              - 'apps/cdk/**'
              - 'apps/backend/**'

      - name: set api subdomain
        run: |
          if [ ${{ steps.backend-changed.outputs.backend }} == 'true' ]; then
            echo "apiSubDomain=staging-${{ github.event.pull_request.number }}" >> $GITHUB_ENV
          else
            echo "apiSubDomain=dev" >> $GITHUB_ENV
          fi

      - name: build project
        env:
          HUSKY: 0
          # frontend env variables
          VITE_ENDPOINT: ${{ env.apiSubDomain }}
          # backend env variables
          HOSTED_ZONE_ID: ${{ secrets.HOSTED_ZONE_ID }}
          CERTIFICATE_ARN: ${{ secrets.CERTIFICATE_ARN }}
          MONGODB_URI_PROD: ${{ secrets.MONGODB_URI_PROD }}
          PR_NUM: ${{ github.event.pull_request.number }}
          #          ALPHA: true
          # for Turbo caching
          TURBO_API: ${{ vars.TURBO_API }}
          TURBO_TOKEN: ${{ secrets.TURBO_TOKEN }}
          TURBO_TEAM: "team_antalmanac"
        run: npx turbo build

      - name: get stack names
        run: |
          stacks=$(npx cdk list --app 'cdk.out')
          if [[ $(echo "$stacks" | wc -l) -eq 1 ]]; then
            frontendStack=$stacks
            echo "Only one stack defined, assuming it's the frontend stack: $frontendStack"
          else
            { read -r backendStack; read -r frontendStack; } <<< "$stacks"
            echo "Both stacks defined: backend: $backendStack and frontend: $frontendStack"
          fi
          echo "frontendStack=$frontendStack" >> $GITHUB_ENV
          echo "backendStack=$backendStack" >> $GITHUB_ENV
        working-directory: apps/cdk

      - name: write env variables to output
        id: write-output
        run: |
          echo "backendStack=$backendStack" >> $GITHUB_OUTPUT
          echo "frontendStack=$frontendStack" >> $GITHUB_OUTPUT
          echo "apiSubDomain=$apiSubDomain" >> $GITHUB_OUTPUT

      - name: upload build artifcats
        uses: actions/upload-artifact@v3
        with:
          name: ${{ github.sha }}
          path: apps/cdk/cdk.out
          retention-days: 1
